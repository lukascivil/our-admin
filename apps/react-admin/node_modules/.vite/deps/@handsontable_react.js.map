{
  "version": 3,
  "sources": ["../../@handsontable/react/es/react-handsontable.js"],
  "sourcesContent": ["import Handsontable from 'handsontable';\nimport React from 'react';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar SettingsMapper = function () {\n    function SettingsMapper() {\n        classCallCheck(this, SettingsMapper);\n\n        this.registeredHooks = Handsontable.hooks.getRegistered();\n    }\n    /**\r\n     * Parse component settings into Handosntable-compatible settings.\r\n     *\r\n     * @param {Object} properties Object containing properties from the HotTable object.\r\n     * @returns {Object} Handsontable-compatible settings object.\r\n     */\n\n\n    createClass(SettingsMapper, [{\n        key: 'getSettings',\n        value: function getSettings(properties) {\n            var newSettings = {};\n            if (properties.settings) {\n                var settings = properties.settings;\n                for (var key in settings) {\n                    if (settings.hasOwnProperty(key)) {\n                        newSettings[key] = settings[key];\n                    }\n                }\n            }\n            for (var _key in properties) {\n                if (_key !== 'settings' && properties.hasOwnProperty(_key)) {\n                    newSettings[_key] = properties[_key];\n                }\n            }\n            return newSettings;\n        }\n    }]);\n    return SettingsMapper;\n}();\n\nvar version=\"2.1.0\";\n\n/**\r\n * A Handsontable-ReactJS wrapper.\r\n *\r\n * To implement, use the `HotTable` tag with properties corresponding to Handsontable options.\r\n * For example:\r\n *\r\n * ```js\r\n * <HotTable id=\"hot\" data={dataObject} contextMenu={true} colHeaders={true} width={600} height={300} stretchH=\"all\" />\r\n *\r\n * // is analogous to\r\n * let hot = new Handsontable(document.getElementById('hot'), {\r\n *    data: dataObject,\r\n *    contextMenu: true,\r\n *    colHeaders: true,\r\n *    width: 600\r\n *    height: 300\r\n * });\r\n *\r\n * ```\r\n *\r\n * @class HotTable\r\n */\nvar HotTable = function (_React$Component) {\n  inherits(HotTable, _React$Component);\n\n  function HotTable() {\n    classCallCheck(this, HotTable);\n\n    /**\r\n     * Reference to the `SettingsMapper` instance.\r\n     *\r\n     * @type {SettingsMapper}\r\n     */\n    var _this = possibleConstructorReturn(this, (HotTable.__proto__ || Object.getPrototypeOf(HotTable)).apply(this, arguments));\n\n    _this.settingsMapper = new SettingsMapper();\n    /**\r\n     * The `id` of the main Handsontable DOM element.\r\n     *\r\n     * @type {String}\r\n     */\n    _this.id = null;\n    /**\r\n     * Reference to the Handsontable instance.\r\n     *\r\n     * @type {Object}\r\n     */\n    _this.hotInstance = null;\n    /**\r\n     * Reference to the main Handsontable DOM element.\r\n     *\r\n     * @type {HTMLElement}\r\n     */\n    _this.hotElementRef = null;\n    return _this;\n  }\n\n  createClass(HotTable, [{\n    key: 'setHotElementRef',\n\n    /**\r\n     * Set the reference to the main Handsontable DOM element.\r\n     *\r\n     * @param {HTMLElement} element The main Handsontable DOM element.\r\n     */\n    value: function setHotElementRef(element) {\n      this.hotElementRef = element;\n    }\n    /**\r\n     * Initialize Handsontable after the component has mounted.\r\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var newSettings = this.settingsMapper.getSettings(this.props);\n      this.hotInstance = new Handsontable(this.hotElementRef, newSettings);\n    }\n    /**\r\n     * Call the `updateHot` method and prevent the component from re-rendering the instance.\r\n     *\r\n     * @param {Object} nextProps\r\n     * @param {Object} nextState\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      this.updateHot(this.settingsMapper.getSettings(nextProps));\n      return false;\n    }\n    /**\r\n     * Destroy the Handsontable instance when the parent component unmounts.\r\n     */\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.hotInstance.destroy();\n    }\n    /**\r\n     * Render the table.\r\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      this.id = this.props.id || 'hot-' + Math.random().toString(36).substring(5);\n      this.className = this.props.className || '';\n      this.style = this.props.style || {};\n      return React.createElement(\"div\", { ref: this.setHotElementRef.bind(this), id: this.id, className: this.className, style: this.style });\n    }\n    /**\r\n     * Call the `updateSettings` method for the Handsontable instance.\r\n     *\r\n     * @param {Object} newSettings The settings object.\r\n     */\n\n  }, {\n    key: 'updateHot',\n    value: function updateHot(newSettings) {\n      this.hotInstance.updateSettings(newSettings, false);\n    }\n  }], [{\n    key: 'version',\n    get: function get$$1() {\n      return version;\n    }\n  }]);\n  return HotTable;\n}(React.Component);\n\nexport { HotTable };\n"],
  "mappings": "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",
  "names": ["SettingsMapper", "HotTable", "React"]
}
